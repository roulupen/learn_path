# LearnPath - Comprehensive .gitignore
# Covers both Frontend (React/Node.js) and Backend (Python/FastAPI) services

# ===========================
# BACKEND (Python/FastAPI)
# ===========================

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# FastAPI/Uvicorn (keep logs folder structure, ignore log files)
*.log
logs/*.log
logs/*.pid
logs/*.out
!logs/.gitkeep
*.pid

# Database files (keep folder structure, ignore database files)
*.db
*.sqlite
*.sqlite3
data/*.db
data/*.sqlite
data/*.sqlite3
data/uploads/*
!data/uploads/.gitkeep
*.db-journal

# AI/ML models and data (but not app source code models)
# Ignore ML model files but keep Python app models directory
*.pkl
*.joblib
*.h5
*.hdf5

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ===========================
# FRONTEND (React/Node.js)
# ===========================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Production builds
dist/
dist-ssr/
build/
out/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output/

# Grunt intermediate storage
.grunt/

# Bower dependency directory
bower_components/

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.cache/
.parcel-cache/

# Next.js build output
.next/

# Nuxt.js build / generate output
.nuxt/

# Gatsby files
.cache/
public/

# Vite
.vite/

# Rollup cache
.rollup.cache/

# Storybook build outputs
.out/
.storybook-out/

# Temporary folders
tmp/
temp/

# ===========================
# DEVELOPMENT TOOLS
# ===========================

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===========================
# OPERATING SYSTEM
# ===========================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===========================
# PROJECT SPECIFIC
# ===========================

# Environment variables (keep example files)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
# Keep example environment files
!.env.example
!env.example

# Configuration files with sensitive data (keep example files)
config.json
secrets.json
*.key
*.pem
*.p12
*.pfx
# Keep example configuration files
!config.json.example
!secrets.json.example

# Log files (already handled above in FastAPI section)
server.log
access.log
error.log

# Backup files
*.bak
*.backup
*.old
*.orig

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Package lock files (optional - uncomment if you want to ignore them)
# package-lock.json
# yarn.lock

# Build artifacts
*.tar.gz
*.zip
*.rar
*.7z

# Documentation builds
docs/_build/
docs/build/

# Test results
test-results/
test-reports/

# Profiling data
*.prof

# ===========================
# AI/LLM SPECIFIC
# ===========================

# Large model files
*.bin
*.safetensors
*.onnx
*.tflite

# API keys and tokens (extra safety)
*api_key*
*token*
*secret*
.secrets/

# AI training data
training_data/
datasets/
checkpoints/

# ===========================
# DOCKER
# ===========================

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# ===========================
# MISC
# ===========================

# Thumbnails
*.jpg.thumb
*.png.thumb
*.gif.thumb

# Archives
*.tar
*.gz
*.bz2
*.xz

# Certificates
*.crt
*.cert
*.ca-bundle

# Local development overrides
local_settings.py
local_config.json
.local/

# ===========================
# ESSENTIAL FILES - NEVER IGNORE
# ===========================

# Always keep these files for application to work from scratch
!requirements.txt
!package.json
!package-lock.json
!yarn.lock
!pyproject.toml
!uv.lock
!tsconfig.json
!tsconfig.node.json
!vite.config.ts
!main.py
!README.md
!.gitignore
!start.sh

# Keep essential directories structure
!backend/
!frontend/
!backend/app/
!backend/prompts/
!backend/data/
!backend/logs/
!frontend/src/
!frontend/public/

# Keep all Python source files
!**/*.py
!**/*.ts
!**/*.tsx
!**/*.js
!**/*.jsx
!**/*.json
!**/*.html
!**/*.css
!**/*.scss
!**/*.md
!**/*.txt

# Keep configuration files
!**/*.toml
!**/*.yaml
!**/*.yml
!**/Dockerfile
!**/docker-compose.yml
